{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/api/v01/orderer/detailMenu/{menuname}": {
            "get": {
                "description": "각 메뉴별 상세 정보를 조회합니다. 메뉴 이름을 받습니다. 해당 메뉴의 평점과 리뷰 리스트를 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API  메뉴 상세 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu Name",
                        "name": "menuname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴 상세 조회 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiGetMenuDetailResponse"
                        }
                    },
                    "400": {
                        "description": "메뉴 상세 조회 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/orderer/menu/{sort}": {
            "get": {
                "description": "메뉴 리스트를 조회합니다. Path 로 정렬할 데이터를 받습니다. [recommend, grade, reorder, createdat]",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 메뉴 리스트 조회",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Sorting Parameter",
                        "name": "sort",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴 리스트 조회 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiMenuListResponse"
                        }
                    },
                    "400": {
                        "description": "조회 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/orderer/order": {
            "post": {
                "description": "새로운 주문을 생성합니다. json 포맷으로 요청합니다. 반환값은 주문번호 입니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 주문 생성 요청",
                "parameters": [
                    {
                        "description": "주문 생성 요청",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiMenuCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "주문 생성 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiMenuCreateResponse"
                        }
                    },
                    "400": {
                        "description": "주문 생성 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/orderer/order/{orderId}/{flag}": {
            "patch": {
                "description": "주문한 메뉴를 변경 또는 추가 합니다. 주문ID, 추가 또는 변경의 Flag,  메뉴를 Body 로 받습니다. flag 가 0 일땐 메뉴 추가이며 배달중일 경우 신규주문으로 처리, 배달중이 아닐경우 성공을 반환합니다. flag 가 1일땐 메뉴 변경이며 조리중,배달중 일경우 실패, 아닐경우 성공을 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 주문 변경 ( 메뉴 변경 및 추가 )",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Order Id",
                        "name": "orderId",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "AddMenu : 0, UpdateMenu : 1",
                        "name": "flag",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "변경 또는 추가할 메뉴",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴 추가 성공시",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "201": {
                        "description": "메뉴 추가 실패시 신규주문처리",
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateOrderResponse"
                        }
                    },
                    "400": {
                        "description": "메뉴 변경 실패시",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/orderer/orders": {
            "get": {
                "description": "주문 내역을 조회 합니다. 현재 주문과 주문이 완료된 이전 주문들을 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 주문 내역 조회",
                "responses": {
                    "200": {
                        "description": "주문 내역 조회 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiGetOrdersResponse"
                        }
                    },
                    "400": {
                        "description": "주문 내역 조회 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/orderer/review/{orderID}": {
            "post": {
                "description": "완료된 주문에 리뷰를 작성합니다. 해당 주문의 ID를 받습니다. 성공/실패 여부를 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 리뷰 작성 요청",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Review ID",
                        "name": "orderID",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "리뷰 생성 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiCreateReviewRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "리뷰 작성 성공",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "400": {
                        "description": "리뷰 작성 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/taker/menu": {
            "post": {
                "description": "신규 메뉴를 생성합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 신규 메뉴 등록",
                "parameters": [
                    {
                        "description": "메뉴 등록 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiCreateMenuRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "메뉴 생성 성공",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "400": {
                        "description": "메뉴 생성 실패(동일 메뉴이름이 존재)",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            },
            "delete": {
                "description": "기존 메뉴 삭제 플래그를 변경(false -\u003e true)합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 기존 메뉴 삭제",
                "parameters": [
                    {
                        "description": "메뉴 삭제 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴 삭제 성공",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "400": {
                        "description": "메뉴 삭제 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            },
            "patch": {
                "description": "추천 메뉴를 변경합니다. 요청한 메뉴가  금일 추천 메뉴라면 추천하지 않음으로, 추천 메뉴가 아니라면 추천 메뉴로 설정합니다. 응답으로 추천 메뉴들을 반환합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 금일 추천 메뉴 변경",
                "parameters": [
                    {
                        "description": "금일 추천 메뉴 변경 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateOrderRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "추천 메뉴 변경 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateMenuRecommend"
                        }
                    },
                    "400": {
                        "description": "추천 메뉴 변경 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/taker/menu/{menuname}": {
            "put": {
                "description": "기존 메뉴를 수정합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 기존 메뉴 수정",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Menu Name",
                        "name": "menuname",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "메뉴 수정 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateMenuRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴 수정 성공",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "400": {
                        "description": "메뉴 수정 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/taker/orders": {
            "get": {
                "description": "주문 리스트를 조회합니다. 주문 상태가 접수되기전 상태인 주문들만 조회합니다 (주문이 막 들어온 상태).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API 주문 리스트 조회",
                "responses": {
                    "200": {
                        "description": "주문 조회 성공",
                        "schema": {
                            "$ref": "#/definitions/model.ApiGetOrderListResponse"
                        }
                    },
                    "400": {
                        "description": "주문 조회 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        },
        "/api/v01/taker/orders/{menuname}": {
            "patch": {
                "description": "각 메뉴별 주문들의 상태를 다음 단계로 변경합니다. 메뉴이름 과 현재 상태를 요청합니다. 해당 메뉴의 0(접수중)인 주문들을 1(접수완료) 상태로 업데이트 합니다.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "summary": "💡API  각 메뉴별 주문 상태 변경",
                "parameters": [
                    {
                        "description": "메뉴별 상태 업데이트 요청 Body",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/model.ApiUpdateOrderStatusRequest"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Menu Name",
                        "name": "menuname",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "메뉴별 주문 상태 저장 성공",
                        "schema": {
                            "$ref": "#/definitions/model.Success"
                        }
                    },
                    "400": {
                        "description": "저장 실패",
                        "schema": {
                            "$ref": "#/definitions/model.Failure"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "model.ApiCreateMenuRequest": {
            "type": "object",
            "properties": {
                "limitorder": {
                    "type": "integer",
                    "example": 300
                },
                "menuname": {
                    "type": "string",
                    "example": "우동"
                },
                "orderstatus": {
                    "type": "boolean",
                    "example": false
                },
                "origin": {
                    "type": "string",
                    "example": "국내산"
                },
                "price": {
                    "type": "integer",
                    "example": 15000
                },
                "spice": {
                    "type": "integer"
                }
            }
        },
        "model.ApiCreateReviewRequest": {
            "type": "object",
            "properties": {
                "comment": {
                    "type": "string",
                    "example": "맛있어요"
                },
                "grade": {
                    "type": "number",
                    "example": 3.5
                }
            }
        },
        "model.ApiGetMenuDetailResponse": {
            "type": "object",
            "properties": {
                "avgGrade": {
                    "type": "number",
                    "example": 3.5
                },
                "reviewList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Review"
                    }
                }
            }
        },
        "model.ApiGetOrderListResponse": {
            "type": "object",
            "properties": {
                "orders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                }
            }
        },
        "model.ApiGetOrdersResponse": {
            "type": "object",
            "properties": {
                "currentOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                },
                "pastOrders": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Order"
                    }
                }
            }
        },
        "model.ApiMenuCreateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string",
                    "example": "서울시 강남구 위메이드동 1212-202 101호"
                },
                "menuname": {
                    "type": "string",
                    "example": "떡볶이"
                },
                "phone": {
                    "type": "string",
                    "example": "01020221225"
                }
            }
        },
        "model.ApiMenuCreateResponse": {
            "type": "object",
            "properties": {
                "주문번호": {
                    "type": "integer",
                    "example": 15
                }
            }
        },
        "model.ApiMenuListResponse": {
            "type": "object",
            "properties": {
                "menuList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                }
            }
        },
        "model.ApiUpdateMenuRecommend": {
            "type": "object",
            "properties": {
                "menuList": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/model.Menu"
                    }
                }
            }
        },
        "model.ApiUpdateMenuRequest": {
            "type": "object",
            "properties": {
                "limitorder": {
                    "type": "integer",
                    "example": 300
                },
                "orderstatus": {
                    "type": "boolean",
                    "example": false
                },
                "origin": {
                    "type": "string",
                    "example": "국내산"
                },
                "price": {
                    "type": "integer",
                    "example": 15000
                },
                "spice": {
                    "type": "integer"
                }
            }
        },
        "model.ApiUpdateOrderRequest": {
            "type": "object",
            "properties": {
                "menuname": {
                    "type": "string",
                    "example": "우동"
                }
            }
        },
        "model.ApiUpdateOrderResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "해당 주문은 배달중입니다. 신규주문으로 처리되었습니다."
                },
                "ordernumber": {
                    "type": "integer",
                    "example": 17
                }
            }
        },
        "model.ApiUpdateOrderStatusRequest": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "integer",
                    "example": 0
                }
            }
        },
        "model.Failure": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "false"
                }
            }
        },
        "model.Menu": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "63a73a1c8d989838729bc114"
                },
                "createdat": {
                    "description": "일반적으로 created_at, updated_at은 한 세트로 이루어집니다.\n\t\t그 이유는 추후 값 변경의 히스토리 추적을 위해서 updated_at이 용이합니다. 또한, 가장 최근에 변경된 순으로 정렬을 하는 경우에도 용이하구요.",
                    "type": "string",
                    "example": "2022-12-24T16:17:12.793+00:00"
                },
                "grade": {
                    "type": "number",
                    "example": 3.5
                },
                "isdelete": {
                    "type": "boolean",
                    "example": false
                },
                "limitorder": {
                    "type": "integer",
                    "example": 100
                },
                "menuname": {
                    "type": "string",
                    "example": "떡볶이"
                },
                "orderstatus": {
                    "type": "boolean",
                    "example": true
                },
                "origin": {
                    "type": "string",
                    "example": "국내산"
                },
                "price": {
                    "type": "integer",
                    "example": 150000
                },
                "recommend": {
                    "type": "boolean",
                    "example": true
                },
                "reorder": {
                    "type": "integer",
                    "example": 30
                },
                "spice": {
                    "type": "integer",
                    "example": 3
                },
                "storenumber": {
                    "type": "integer",
                    "example": 1
                },
                "updatedat": {
                    "type": "string",
                    "example": "2022-12-25T16:17:12.793+00:00"
                }
            }
        },
        "model.Order": {
            "type": "object",
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "63a73a1c8d989838729bc114"
                },
                "address": {
                    "type": "string",
                    "example": "서울시 강남구 위메이드동 1212-202 101호"
                },
                "createdat": {
                    "type": "string",
                    "example": "2022-12-24T16:17:12.793+00:00"
                },
                "isdelete": {
                    "type": "boolean",
                    "example": false
                },
                "isexistreview": {
                    "type": "boolean",
                    "example": false
                },
                "menuname": {
                    "type": "string",
                    "example": "떡볶이"
                },
                "ordernumber": {
                    "type": "integer",
                    "example": 11
                },
                "phone": {
                    "type": "string",
                    "example": "01020221205"
                },
                "status": {
                    "description": "Status의 경우 상수를 통해 입력받는다면 사용하는 곳에서 코드를 읽기에 쉬워집니다.\n\t\t관련 키워드 : Enum, Const",
                    "allOf": [
                        {
                            "$ref": "#/definitions/model.Status"
                        }
                    ],
                    "example": 0
                },
                "updatedat": {
                    "type": "string",
                    "example": "2022-12-25T16:17:12.793+00:00"
                }
            }
        },
        "model.Review": {
            "type": "object",
            "required": [
                "comment",
                "grade"
            ],
            "properties": {
                "_id": {
                    "type": "string",
                    "example": "63a73a1c8d989838729bc114"
                },
                "comment": {
                    "type": "string",
                    "example": "맛있었습니다."
                },
                "createdat": {
                    "type": "string",
                    "example": "2022-12-24T17:42:53.949+00:00"
                },
                "grade": {
                    "type": "number",
                    "example": 5
                },
                "isdelete": {
                    "type": "boolean",
                    "example": false
                },
                "menuname": {
                    "type": "string",
                    "example": "떡볶이"
                }
            }
        },
        "model.Status": {
            "type": "integer",
            "enum": [
                0,
                1,
                2,
                3,
                4,
                5
            ],
            "x-enum-varnames": [
                "Ordering",
                "OrderCancel",
                "AddOrder",
                "Cooking",
                "Delivering",
                "Complete"
            ]
        },
        "model.Success": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "success"
                }
            }
        }
    }
}